
" ============================================================================
" Bundle
" ============================================================================

set nocompatible " be iMproved, required
filetype off	 " required

set rtp+=~/.vim/bundle/Vundle.vim " set the runtime path to include Vundle and initialize
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'kien/ctrlp.vim'
Plugin 'vim-airline'
Plugin 'bling/vim-bufferline'
Plugin 'airblade/vim-gitgutter' " Show a git diff in the 'gutter'
Plugin 'mileszs/ack.vim' " Add support ack to Vim
Plugin 'sjl/gundo.vim' " Visualize Vim undo tree.
Plugin 'tpope/vim-fugitive' " Git wrapper
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'nathanaelkane/vim-indent-guides' " Visually displaying indent levels in Vim.
Plugin 'vim-ruby/vim-ruby'
Plugin 'tpope/vim-surround'
Plugin 'mattn/emmet-vim'
Plugin 'SirVer/ultisnips'
Plugin 'godlygeek/tabular'
Plugin 'majutsushi/tagbar'
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-easytags'
Plugin 'tpope/vim-cucumber'
Plugin 'jeetsukumaran/vim-buffergator'
Plugin 'ngmy/vim-rubocop'
Plugin 'kchmck/vim-coffee-script'
Plugin 'digitaltoad/vim-jade'
Plugin 'skwp/vim-rspec'
Plugin 'easymotion/vim-easymotion'
Plugin 'scrooloose/syntastic'
Plugin 'rust-lang/rust.vim'
Plugin 'elmcast/elm-vim'
Plugin 'aklt/plantuml-syntax'
Plugin 'neovimhaskell/haskell-vim'
Plugin 'alx741/vim-hindent' " Dont forget:  stack install hindent
Plugin 'justinmk/vim-sneak'
Plugin 'Chiel92/vim-autoformat'
Plugin 'rhysd/vim-clang-format'
Plugin 'google/vim-maktaba'
Plugin 'bazelbuild/vim-bazel'
Plugin 'dbgx/lldb.nvim'
Plugin 'ryanoasis/vim-devicons' " yaourt -S nerd-fonts-complete
Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'

" Themes
Plugin 'altercation/vim-colors-solarized'
Plugin 'w0ng/vim-hybrid'
Plugin 'whatyouhide/vim-gotham'
Plugin 'flazz/vim-colorschemes'

call vundle#end()

" ============================================================================
" bind key
" ============================================================================

" Rebind <Leader> key
let mapleader = ","

" Quit window on <leader>q
nnoremap <leader>q :q<CR>

" bind Ctrl+<movement> keys to move around the windows
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" easier moving between tabs
map <Leader>n <esc>:tabprevious<CR>
map <Leader>m <esc>:tabnext<CR>

" easier moving of code blocks
vnoremap < <gv  " better indentation
vnoremap > >gv  " better indentation

" NERDTree
"nnoremap <leader>t :NERDTreeToggle<CR>
map <Leader>d <plug>NERDTreeTabsToggle<CR>

" gundo
nnoremap <Leader>u :GundoToggle<CR>

" Tagbar
nmap <F8> :TagbarToggle<CR>

" ============================================================================
" Settings
" ============================================================================

set clipboard=unnamed,unnamedplus

" Color scheme
" http://www.vim.org/scripts/download_script.php?src_id=13400
" color wombat256mod

set t_Co=256
let g:solarized_termcolors=256
syntax enable
set background=dark
colorscheme hybrid

" Automatic reloading of .vimrc
autocmd! bufwritepost .vimrc source %

" utf-8 default encoding
set enc=utf-8

" prefer unix over windows over os9 formats
set fileformats=unix,dos,mac

" Tab Settings
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" auto
set autoread
set autowrite

" Show whitespace
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
au InsertLeave * match ExtraWhitespace /\s\+$/
set list
set listchars=tab:➪\ ,eol:¬,space:·

" Enable syntax highlighting
filetype off
filetype plugin indent on
syntax on

" Showing line numbers and length
set number  " show line numbers
set tw=79   " width of document (used by gd)
set nowrap  " don't automatically wrap on load
set fo-=t   " don't automatically wrap text when typing
set colorcolumn=80
highlight ColorColumn ctermbg=233

" split management
nnoremap <leader>w <C-w>v<C-w>l
nnoremap <leader>W <C-w>s
nnoremap <leader>s :new<CR>

" Search
set hlsearch
set incsearch
set ignorecase
set smartcase

" Backup
set nobackup
set nowritebackup
set noswapfile

" python settings
autocmd FileType python setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2

" ruby settings
autocmd FileType ruby setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2

" elm settings
autocmd FileType elm setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4

" markdown settings
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
autocmd FileType md setlocal expandtab shiftwidth=4 tabstop=4 softtabstop=4

" folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use

" undo settings
set undofile
set undodir=~/.vimundo
set undolevels=1000
set undoreload=10000

" ============================================================================
" Plugin setup
" ============================================================================

" Airline
set laststatus=2

let g:airline_theme='badwolf'

if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif

let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇ '
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" Ctrlp
let g:ctrlp_max_height = 30
let g:ctrlp_map = '<Leader>o'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_match_window = 'bottom,order:top,min:1,max:20'
set wildignore+=*.pyc
set wildignore+=*_build/*
set wildignore+=*/coverage/*

" NERDTree
let NERDTreeIgnore=['\.pyc$', '\.pyo$', '^bazel-']
let NERDTreeDirArrowExpandable = '+'
let NERDTreeDirArrowCollapsible = '~'
let NERDTreeAutoDeleteBuffer = 1
let NERDTreeMinimalUI = 1
" let NERDTreeQuitOnOpen = 1

" vim-better-whitespace
au VimEnter * ToggleStripWhitespaceOnSave

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" vim-indent-guides
"au VimEnter * IndentGuidesEnable
"autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=grey
"autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=darkgrey

" RustFmt
let g:rustfmt_autosave = 1

" Elm
let g:elm_format_autosave = 1

" Haskell
let g:hindent_on_save = 1
let g:hindent_indent_size = 2
let g:hindent_line_length = 80

" vim-sneak
let g:sneak#label = 1

" clang-format
autocmd FileType c,cpp ClangFormatAutoEnable

" vim-devicons
set encoding=utf-8
let g:WebDevIconsNerdTreeAfterGlyphPadding = ''
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:DevIconsEnableFoldersOpenClose = 1
let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ' '
let g:DevIconsDefaultFolderOpenSymbol = ' '

" vim-nerdtree-syntax-highlight
let g:NERDTreeHighlightCursorline = 0
let g:NERDTreeHighlightFolders = 1 " enables folder icon highlighting using exact match
" let g:NERDTreeHighlightFoldersFullName = 1 " highlights the folder name
